#BlueJ class context
comment0.target=MyBoundedGrid
comment0.text=\n\ MyBoundedGrid\ offers\ the\ ability\ to\ place\ objects\ into\ a\ grid\n\ and\ manipulate\ the\ different\ objects\ on\ it.\n\n\ @author\ Dawson\ Chen\n\ @version\ 3/6/19\n\ @param\ <E>\ can\ be\ any\ object\ stored\ in\ the\ grid\n
comment1.params=rows\ cols
comment1.target=MyBoundedGrid(int,\ int)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ MyBoundedGrid\n\ Sets\ rows\ and\ columns\ instance\ fields\ with\ rows\ and\ cols\n\ @param\ rows\ is\ the\ number\ of\ rows\ in\ the\ grid\n\ @param\ cols\ is\ the\ number\ of\ columns\ in\ the\ grid\n
comment2.params=
comment2.target=int\ getNumRows()
comment2.text=\n\ Gets\ how\ many\ rows\ the\ grid\ has\n\ @return\ rows\n
comment3.params=
comment3.target=int\ getNumCols()
comment3.text=\n\ Gets\ the\ number\ of\ columns\ the\ grid\ has\n\ @return\ columns\n
comment4.params=loc
comment4.target=boolean\ isValid(Location)
comment4.text=\n\ Gets\ whether\ the\ inputed\ row\ and\ column\ is\ in\ the\ grid\n\ @param\ loc\ is\ the\ location\ to\ be\ tested\n\ @return\ true\ if\ loc\ is\ a\ valid\ coordinate\ in\ the\ grid\n\ otherwise\ false\n
comment5.params=loc\ obj
comment5.target=java.lang.Object\ put(Location,\ java.lang.Object)
comment5.text=\n\ Puts\ an\ object\ into\ the\ grid\ at\ a\ specified\ location\n\ @param\ loc\ is\ the\ location\ to\ put\n\ @param\ obj\ is\ what\ to\ put\n\ @return\ the\ object\ that\ used\ to\ be\ at\ loc\ before\ the\ putting\n
comment6.params=loc
comment6.target=java.lang.Object\ remove(Location)
comment6.text=\n\ Removes\ the\ object\ at\ a\ specified\ location\n\ @param\ loc\ is\ the\ location\ whose\ object\ is\ to\ be\ removed\n\ @return\ the\ removed\ obj\n
comment7.params=loc
comment7.target=java.lang.Object\ get(Location)
comment7.text=\n\ Gets\ the\ object\ at\ a\ specified\ location\ and\ returns\ it\n\ @param\ loc\ is\ the\ location\ to\ look\ at\n\ @return\ the\ object\ at\ loc\n
comment8.params=
comment8.target=java.util.ArrayList\ getOccupiedLocations()
comment8.text=\n\ Returns\ an\ arraylist\ of\ all\ the\ locations\ that\ are\ occupied\n\ @return\ an\ arraylist\ filled\ with\ occupied\ locations\n
numComments=9
